// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task_category.proto

package flextime_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Estimate             string               `protobuf:"bytes,2,opt,name=estimate,proto3" json:"estimate,omitempty"`
	Repeat               string               `protobuf:"bytes,3,opt,name=repeat,proto3" json:"repeat,omitempty"`
	Due                  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=due,proto3" json:"due,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_34a1ded516216322, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetEstimate() string {
	if m != nil {
		return m.Estimate
	}
	return ""
}

func (m *Task) GetRepeat() string {
	if m != nil {
		return m.Repeat
	}
	return ""
}

func (m *Task) GetDue() *timestamp.Timestamp {
	if m != nil {
		return m.Due
	}
	return nil
}

type TaskCategory struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Contexts             []string `protobuf:"bytes,2,rep,name=contexts,proto3" json:"contexts,omitempty"`
	Tasks                []*Task  `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskCategory) Reset()         { *m = TaskCategory{} }
func (m *TaskCategory) String() string { return proto.CompactTextString(m) }
func (*TaskCategory) ProtoMessage()    {}
func (*TaskCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_34a1ded516216322, []int{1}
}

func (m *TaskCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskCategory.Unmarshal(m, b)
}
func (m *TaskCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskCategory.Marshal(b, m, deterministic)
}
func (m *TaskCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskCategory.Merge(m, src)
}
func (m *TaskCategory) XXX_Size() int {
	return xxx_messageInfo_TaskCategory.Size(m)
}
func (m *TaskCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskCategory.DiscardUnknown(m)
}

var xxx_messageInfo_TaskCategory proto.InternalMessageInfo

func (m *TaskCategory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskCategory) GetContexts() []string {
	if m != nil {
		return m.Contexts
	}
	return nil
}

func (m *TaskCategory) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type AddTaskResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTaskResponse) Reset()         { *m = AddTaskResponse{} }
func (m *AddTaskResponse) String() string { return proto.CompactTextString(m) }
func (*AddTaskResponse) ProtoMessage()    {}
func (*AddTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_34a1ded516216322, []int{2}
}

func (m *AddTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTaskResponse.Unmarshal(m, b)
}
func (m *AddTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTaskResponse.Marshal(b, m, deterministic)
}
func (m *AddTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTaskResponse.Merge(m, src)
}
func (m *AddTaskResponse) XXX_Size() int {
	return xxx_messageInfo_AddTaskResponse.Size(m)
}
func (m *AddTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTaskResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Task)(nil), "flextime.v1.Task")
	proto.RegisterType((*TaskCategory)(nil), "flextime.v1.TaskCategory")
	proto.RegisterType((*AddTaskResponse)(nil), "flextime.v1.AddTaskResponse")
}

func init() { proto.RegisterFile("task_category.proto", fileDescriptor_34a1ded516216322) }

var fileDescriptor_34a1ded516216322 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x4d, 0x13, 0xab, 0x4e, 0x04, 0xe9, 0x08, 0xb2, 0x04, 0xc1, 0x90, 0x8b, 0x39, 0xc8,
	0x16, 0xe3, 0xd5, 0x8b, 0xa8, 0x5f, 0x20, 0xe6, 0x2e, 0xdb, 0x66, 0x1a, 0x4a, 0x9b, 0x6c, 0xc8,
	0x4e, 0xa5, 0x82, 0x1f, 0x5e, 0x76, 0x93, 0x88, 0x7f, 0xf0, 0x96, 0xf7, 0x7e, 0x93, 0x79, 0xf3,
	0x16, 0xce, 0x59, 0x99, 0xcd, 0xeb, 0x52, 0x31, 0x55, 0xba, 0x7b, 0x97, 0x6d, 0xa7, 0x59, 0x63,
	0xb8, 0xda, 0xd2, 0x9e, 0xd7, 0x35, 0xc9, 0xb7, 0xdb, 0xe8, 0xaa, 0xd2, 0xba, 0xda, 0xd2, 0xdc,
	0xa1, 0xc5, 0x6e, 0x35, 0xb7, 0xc0, 0xb0, 0xaa, 0xdb, 0x7e, 0x3a, 0xf9, 0x80, 0xa0, 0x50, 0x66,
	0x83, 0x08, 0x41, 0xa3, 0x6a, 0x12, 0x5e, 0xec, 0xa5, 0x27, 0xb9, 0xfb, 0xc6, 0x08, 0x8e, 0xc9,
	0xf0, 0xba, 0x56, 0x4c, 0x62, 0xe2, 0xfc, 0x2f, 0x8d, 0x17, 0x30, 0xed, 0xa8, 0x25, 0xc5, 0xc2,
	0x77, 0x64, 0x50, 0x78, 0x03, 0x7e, 0xb9, 0x23, 0x11, 0xc4, 0x5e, 0x1a, 0x66, 0x91, 0xec, 0xe3,
	0xe5, 0x18, 0x2f, 0x8b, 0x31, 0x3e, 0xb7, 0x63, 0x49, 0x05, 0xa7, 0x36, 0xfd, 0x71, 0x68, 0xf0,
	0xdf, 0x15, 0x4b, 0xdd, 0x30, 0xed, 0xd9, 0x88, 0x49, 0xec, 0xdb, 0x2b, 0x46, 0x8d, 0xd7, 0x70,
	0x68, 0x9f, 0xc0, 0x08, 0x3f, 0xf6, 0xd3, 0x30, 0x9b, 0xc9, 0x6f, 0xdd, 0xa5, 0xdd, 0x9c, 0xf7,
	0x3c, 0x99, 0xc1, 0xd9, 0x43, 0x59, 0x3a, 0x87, 0x4c, 0xab, 0x1b, 0x43, 0xd9, 0x13, 0x04, 0xf9,
	0xf3, 0x4b, 0x81, 0xf7, 0x70, 0x34, 0x20, 0xfc, 0xfb, 0x7f, 0x74, 0xf9, 0xc3, 0xfa, 0xb5, 0x23,
	0x39, 0x58, 0x4c, 0x5d, 0xb5, 0xbb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc7, 0xf8, 0x61, 0x8b,
	0x8b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RESTClient is the client API for REST service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RESTClient interface {
	AddTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*AddTaskResponse, error)
}

type rESTClient struct {
	cc *grpc.ClientConn
}

func NewRESTClient(cc *grpc.ClientConn) RESTClient {
	return &rESTClient{cc}
}

func (c *rESTClient) AddTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*AddTaskResponse, error) {
	out := new(AddTaskResponse)
	err := c.cc.Invoke(ctx, "/flextime.v1.REST/AddTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RESTServer is the server API for REST service.
type RESTServer interface {
	AddTask(context.Context, *Task) (*AddTaskResponse, error)
}

func RegisterRESTServer(s *grpc.Server, srv RESTServer) {
	s.RegisterService(&_REST_serviceDesc, srv)
}

func _REST_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RESTServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flextime.v1.REST/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RESTServer).AddTask(ctx, req.(*Task))
	}
	return interceptor(ctx, in, info, handler)
}

var _REST_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flextime.v1.REST",
	HandlerType: (*RESTServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _REST_AddTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task_category.proto",
}
